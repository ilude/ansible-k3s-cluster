---
- name: check for existing cluster
  stat: 
    path: "{{ lookup('env', 'HOME') }}/kubeconfig"
  register: kubeconfig_file

- name: check for running cluster node {{ node.ip }}
  shell: "kubectl get nodes -o wide | grep {{ node.ip }} | wc -l"
  register: node_configured_output

- name: count running master nodes
  shell: "kubectl get nodes -o wide | grep master | wc -l"
  register: master_count_output

- name: master_count_output
  debug: 
    msg: "master_count_output:{{master_count_output}}"

- name: store master ip
  set_fact: 
    master_ip: "{{ node.ip }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['all'] }}"
  when: master_ip is not defined or master_count_output.stdout == '0'

- name: node configured
  debug: 
    msg: "node configured:{{node_configured_output.stdout == 0|bool}}"

- name: master count
  debug: 
    msg: "master count:{{master_count_output.stdout}}"

- name: master ip
  debug: 
    msg: "master ip:{{master_ip | default('0')}}"

- name: create worker node {{ node.ip }}
  shell: k3sup join --ip {{ node.ip }} --user {{ cluster_username }} --ssh-key ~/.ssh/id_ed25519 --local-path ~/.kube/config --server-ip {{ master_ip }} --server-user {{ cluster_username }} 
  when: node_configured_output.stdout == '0' and master_count_output.stdout | int >= 3

- name: create master node {{ node.ip }}
  shell: k3sup join --ip {{ node.ip }} --user {{ cluster_username }} --ssh-key ~/.ssh/id_ed25519 --server-ip {{ master_ip }} --server-user {{ cluster_username }} --server --k3s-extra-args "--node-taint CriticalAddonsOnly=true:NoExecute --no-deploy servicelb --no-deploy traefik --tls-san {{ master_ip }}"
  when: node_configured_output.stdout == '0' and master_count_output.stdout | int < 3 and master_count_output.stdout | int > 0

- name: create initial master node {{ node.ip }}
  shell: k3sup install --ip {{ node.ip }} --user {{ cluster_username }} --ssh-key ~/.ssh/id_ed25519  --k3s-extra-args "--cluster-init --node-taint CriticalAddonsOnly=true:NoExecute --no-deploy servicelb --no-deploy traefik --tls-san {{ master_ip }}"
  when: (master_ip is not defined) or (master_count_output.stdout == '0')

- name: copy kubeconfig to {{ lookup('env', 'HOME') }}
  copy:
    src: kubeconfig
    dest: "{{ lookup('env', 'HOME') }}/kubeconfig"

- name: wait for node {{node.ip}} to spin up k8s...
  shell: kubectl get nodes -o wide | grep -v NotReady | grep Ready | grep {{ node.ip }} | wc -l
  register: cluster_node_ready
  retries: 10
  until: cluster_node_ready.stdout == '1'


  